@using MudBlazor

<MudDialog @bind-Visible="Open" MaxWidth="MaxWidth.ExtraSmall">
    <DialogContent>
        <MudText Typo="Typo.subtitle1" Class="mb-4">@Message</MudText>
    </DialogContent>

    <DialogActions>
        <div class="d-flex justify-end gap-3">
            <MudButton Variant="Variant.Text"
                       Color="Color.Default"
                       OnClick="Cancel">
                @CancelText
            </MudButton>
            <MudButton Variant="Variant.Filled"
                       Color="@ConfirmColor"
                       OnClick="Confirm">
                @ConfirmText
            </MudButton>
        </div>
    </DialogActions>
</MudDialog>

@code {
    [Parameter] public bool Open { get; set; }
    [Parameter] public EventCallback<bool> OpenChanged { get; set; }

    [Parameter, EditorRequired] public string Message { get; set; }
    [Parameter] public string ConfirmText { get; set; } = "Confirm";
    [Parameter] public string CancelText { get; set; } = "Cancel";
    [Parameter] public Color ConfirmColor { get; set; } = Color.Error;

    [Parameter, EditorRequired] public EventCallback OnConfirm { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }

    private async Task Confirm()
    {
        await OnConfirm.InvokeAsync(null);
        await OpenChanged.InvokeAsync(false);
    }

    private async Task Cancel()
    {
        if (OnCancel.HasDelegate)
            await OnCancel.InvokeAsync(null);
        await OpenChanged.InvokeAsync(false);
    }
}

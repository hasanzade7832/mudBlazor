@using BlazorApp1.Models
@using MudBlazor

<MudTable Items="Items" Class="tasklog-table">
    <HeaderContent>
        <MudTh>#</MudTh>
        <MudTh>عنوان</MudTh>
        <MudTh>مدت</MudTh>
        <MudTh>عملیات</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd><div class="cell-center">@(Items.IndexOf(context) + 1)</div></MudTd>
        <MudTd><div class="cell-center">@context.Title</div></MudTd>
        <MudTd>
            <div class="cell-center">
                <MudChip T="string"
                         Color="Color.Primary"
                         Variant="Variant.Outlined"
                         Icon="@Icons.Material.Filled.Schedule"
                         Size="Size.Small">
                    @FormatTime(context.TotalSeconds)
                </MudChip>
            </div>
        </MudTd>
        <MudTd>
            <div class="cell-center">
                @if (ShowDetailsIcon)
                {
                    <MudIconButton Icon="@Icons.Material.Filled.Visibility"
                                   Color="Color.Primary"
                                   Title="مشاهده جزئیات"
                                   OnClick="@(async () => await OnDetails.InvokeAsync(context.Id))"
                                   Size="Size.Small" />
                }
                <MudIconButton Icon="@Icons.Material.Filled.Edit"
                               Color="Color.Secondary"
                               Title="ویرایش"
                               OnClick="@(async () => await OnEdit.InvokeAsync(context))"
                               Size="Size.Small" />
                <MudIconButton Icon="@Icons.Material.Filled.Delete"
                               Color="Color.Error"
                               Title="حذف"
                               OnClick="@(async () => await OnDelete.InvokeAsync(context.Id))"
                               Size="Size.Small" />
            </div>
        </MudTd>
    </RowTemplate>
</MudTable>


@code {
    [Parameter] public List<ActivityDto> Items { get; set; } = new();
    [Parameter] public EventCallback<ActivityDto> OnEdit { get; set; }
    [Parameter] public EventCallback<int> OnDelete { get; set; }
    [Parameter] public EventCallback<int> OnDetails { get; set; }

    [Parameter] public bool ShowDetailsIcon { get; set; } = true;

    private static string FormatTime(int seconds)
        => TimeSpan.FromSeconds(seconds).ToString(@"hh\:mm\:ss");
}

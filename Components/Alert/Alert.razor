@using MudBlazor

@if (Show)
{
    <div class="alert-center-wrap">
        <MudAlert Severity="@(Severity)" Variant="Variant.Filled" Dense="true" Elevation="6" Class="@AlertCss">
            <div class="d-flex align-items-center justify-content-center gap-2">
                @if (!string.IsNullOrWhiteSpace(Title))
                {
                    <span class="app-alert-title me-1">@Title</span>
                }
                <span class="app-alert-message">@Message</span>
                <MudIconButton Icon="@Icons.Material.Filled.Close"
                               Edge="Edge.Start"
                               Size="Size.Small"
                               Color="Color.Inherit"
                               Class="app-alert-close"
                               OnClick="@OnCloseClick" />
            </div>
        </MudAlert>
    </div>
}

@code {
    [Parameter] public bool Show { get; set; } = true;
    [Parameter] public string? Title { get; set; }
    [Parameter] public string? Message { get; set; }
    [Parameter] public Severity Severity { get; set; } = Severity.Info;
    [Parameter] public EventCallback OnClose { get; set; }

    private string AlertCss => $"app-alert app-alert-{Severity.ToString().ToLower()}";

    protected override async Task OnParametersSetAsync()
    {
        // اتومات بعد 5 ثانیه بسته بشه (اگر Show = true)
        if (Show)
        {
            _ = Task.Run(async () =>
            {
                await Task.Delay(5000);
                if (Show && OnClose.HasDelegate)
                    await InvokeAsync(() => OnClose.InvokeAsync());
            });
        }
    }

    private async Task OnCloseClick()
    {
        if (OnClose.HasDelegate)
            await OnClose.InvokeAsync();
    }
}

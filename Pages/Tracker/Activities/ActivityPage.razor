@page "/ActivityPage"

@using MudBlazor
@using BlazorApp1.Models
@using BlazorApp1.Services.Interfaces

@inject IApiService ApiService
@inject NavigationManager NavManager
@inject ISnackbar Snackbar

<MudContainer MaxWidth="MaxWidth.Medium" Class="py-12">
    <!-- تیتر --------------------------------------------------------------- -->
    <MudText Typo="Typo.h4"
             Align="Align.Center"
             Color="Color.Primary"
             Class="mb-8">
        فعالیت‌ها
    </MudText>

    <!-- ردیفِ افزودن فعالیت (MudGrid) ------------------------------------- -->
    <MudGrid Class="mb-8" AlignItems="AlignItems.Center" Justify="Justify.Center" GutterSpacing="3">
        <!-- ستون عنوان: در مد ≥md هفت واحد از ۱۲ -->
        <MudItem Class="mt-4" xs="12" md="7">
            <MudTextField T="string"
                          @bind-Value="newTitle"
                          Label="عنوان فعالیت"
                          FullWidth="true"
                          Variant="Variant.Outlined"
                          InputClass="text-end" />
        </MudItem>

        <!-- ستون زمان: در مد ≥md سه واحد -->
        <MudItem  xs="12" md="3">
            <MudText Typo="Typo.caption"
                     Align="Align.Right"
                     Class="d-block mb-1">
                فعالیت انجام شده تا الان
            </MudText>

            <MudTextField T="string"
                          @bind-Value="newTime"
                          Placeholder="00:00"
                          FullWidth="true"
                          Variant="Variant.Outlined"
                          InputClass="text-end" />
        </MudItem>

        <!-- ستون دکمه: در مد ≥md دو واحد -->
        <MudItem  xs="12" md="2"
                 Class="mt-8">
            <MudButton Color="Color.Primary"
                       Variant="Variant.Filled"
                       StartIcon="@Icons.Material.Filled.Add"
                       OnClick="@AddActivity"
                       Class="w-100">
                افزودن
            </MudButton>
        </MudItem>
    </MudGrid>

    <!-- جدول فعالیت‌ها ------------------------------------------------------ -->
    @if (loading)
    {
        <MudProgressCircular Indeterminate="true"
                             Color="Color.Primary"
                             Class="d-block mx-auto my-10" />
    }
    else
    {
        <MudPaper Elevation="1">
            <MudTable Items="activities"
                      Hover="true"
                      Striped="true"
                      Dense="true"
                      RowClick="@OnRowClick">

                <HeaderContent>
                    <MudTh Class="text-end">ردیف</MudTh>
                    <MudTh Class="text-end">عنوان فعالیت</MudTh>
                    <MudTh Class="text-end">زمان کل</MudTh>
                    <MudTh Class="text-center">عملیات</MudTh>
                </HeaderContent>

                <RowTemplate>
                    <MudTd Class="text-end font-mono">
                        @(activities.IndexOf(context) + 1)
                    </MudTd>

                    <MudTd Class="text-end">
                        <MudText Typo="Typo.subtitle2">@context.Title</MudText>
                    </MudTd>

                    <MudTd Class="text-end">
                        <MudChip T="string"
                                 Color="Color.Primary"
                                 Variant="Variant.Outlined"
                                 Icon="@Icons.Material.Filled.Schedule">
                            @FormatTime(context.TotalSeconds)
                        </MudChip>
                    </MudTd>

                    <MudTd Class="text-center">
                        <div class="d-inline-flex gap-2" @onclick:stopPropagation="true">
                            <MudIconButton Icon="@Icons.Material.Filled.Edit"
                                           Color="Color.Warning"
                                           Size="Size.Small"
                                           OnClick="@(() => OpenEditDialog(context))" />

                            <MudIconButton Icon="@Icons.Material.Filled.Delete"
                                           Color="Color.Error"
                                           Size="Size.Small"
                                           OnClick="@(() => OpenDeleteDialog(context.Id))" />
                        </div>
                    </MudTd>
                </RowTemplate>
            </MudTable>
        </MudPaper>
    }
</MudContainer>

<!-- دیالوگ ویرایش ----------------------------------------------------------- -->
<MudDialog @bind-Visible="editOpen" MaxWidth="MaxWidth.Small">
    <DialogContent>
        <MudText Typo="Typo.h6" Color="Color.Primary" Class="mb-4">
            ویرایش فعالیت
        </MudText>

        <div class="d-flex flex-column gap-4">
            <MudTextField T="string"
                          @bind-Value="editTitle"
                          Label="عنوان جدید"
                          Variant="Variant.Outlined"
                          InputClass="text-end" />

            <MudTextField T="string"
                          @bind-Value="editTime"
                          Placeholder="00:00"
                          Variant="Variant.Outlined"
                          Class="w-20"
                          InputClass="text-end" />
        </div>
    </DialogContent>

    <DialogActions>
        <div class="d-flex justify-end gap-3 mt-4">
            <MudButton Variant="Variant.Text"
                       Color="Color.Default"
                       OnClick="@(() => editOpen = false)">
                لغو
            </MudButton>

            <MudButton Variant="Variant.Filled"
                       Color="Color.Primary"
                       OnClick="@SaveEdit">
                ذخیره
            </MudButton>
        </div>
    </DialogActions>
</MudDialog>

<!-- دیالوگ حذف -------------------------------------------------------------- -->
<MudDialog @bind-Visible="deleteOpen" MaxWidth="MaxWidth.ExtraSmall">
    <DialogContent>
        <MudText Typo="Typo.subtitle1" Class="mb-4">
            آیا مطمئن هستید که این فعالیت حذف شود؟
        </MudText>
    </DialogContent>

    <DialogActions>
        <div class="d-flex justify-end gap-3">
            <MudButton Variant="Variant.Text"
                       Color="Color.Default"
                       OnClick="@(() => deleteOpen = false)">
                لغو
            </MudButton>

            <MudButton Variant="Variant.Filled"
                       Color="Color.Error"
                       OnClick="@DeleteActivity">
                حذف
            </MudButton>
        </div>
    </DialogActions>
</MudDialog>


@code {
    /* --------------------- state --------------------- */
    private List<ActivityDto> activities = new();
    private bool loading = true;

    private string newTitle = string.Empty;
    private string newTime  = "00:00";

    private bool   editOpen;
    private int    editId;
    private string editTitle = string.Empty;
    private string editTime  = "00:00";

    private bool deleteOpen;
    private int  deleteId;

    /* --------------------- lifecycle ----------------- */
    protected override async Task OnInitializedAsync() => await LoadActivities();

    /* --------------------- helpers ------------------- */
    private static int    ToSec(string hm) => TimeSpan.TryParse(hm, out var ts) ? (int)ts.TotalSeconds : 0;
    private static string FormatTime(int s) => TimeSpan.FromSeconds(s).ToString(@"hh\:mm");

    /* --------------------- data ops ------------------ */
    private async Task LoadActivities()
    {
        loading = true;
        try
        {
            var list = await ApiService.GetActivitiesAsync();
            foreach (var a in list.Where(a => a.TotalSeconds == 0))
            {
                var rec = await ApiService.GetTimeRecordsByActivityAsync(a.Id);
                a.TotalSeconds = rec.Sum(r => ToSec(r.Duration));
            }
            activities = list;
        }
        catch
        {
            Snackbar.Add("خطا در بارگذاری", Severity.Error);
        }
        loading = false;
    }

    private async Task AddActivity()
    {
        if (string.IsNullOrWhiteSpace(newTitle))
        {
            Snackbar.Add("عنوان فعالیت را وارد کنید!", Severity.Error);
            return;
        }

        var ok = await ApiService.CreateActivityAsync(new ActivityDto
        {
            Title        = newTitle.Trim(),
            TotalSeconds = ToSec(newTime)
        });

        Snackbar.Add(ok ? "فعالیت اضافه شد" : "خطا در افزودن",
                     ok ? Severity.Success : Severity.Error);

        if (ok)
        {
            newTitle = string.Empty;
            newTime  = "00:00";
            await LoadActivities();
        }
    }

    private void OpenEditDialog(ActivityDto a)
    {
        editId    = a.Id;
        editTitle = a.Title;
        editTime  = FormatTime(a.TotalSeconds);
        editOpen  = true;
    }

    private async Task SaveEdit()
    {
        if (string.IsNullOrWhiteSpace(editTitle))
        {
            Snackbar.Add("عنوان خالی است", Severity.Error);
            return;
        }

        var ok = await ApiService.UpdateActivityAsync(editId, new ActivityDto
        {
            Id           = editId,
            Title        = editTitle.Trim(),
            TotalSeconds = ToSec(editTime)
        });

        Snackbar.Add(ok ? "ذخیره شد" : "خطا در ذخیره",
                     ok ? Severity.Success : Severity.Error);

        editOpen = false;
        if (ok) await LoadActivities();
    }

    private void OpenDeleteDialog(int id)
    {
        deleteId  = id;
        deleteOpen = true;
    }

    private async Task DeleteActivity()
    {
        var ok = await ApiService.DeleteActivityAsync(deleteId);

        Snackbar.Add(ok ? "حذف شد" : "خطا در حذف",
                     ok ? Severity.Success : Severity.Error);

        deleteOpen = false;
        if (ok) await LoadActivities();
    }

    private void OnRowClick(TableRowClickEventArgs<ActivityDto> e)
    {
        if (e.Item is null) return;
        NavManager.NavigateTo($"/tracker/{e.Item.Id}");
    }
}

@page "/ActivityPage"
@using BlazorApp1.Models
@using BlazorApp1.Services.Interfaces
@inject IApiService ApiService
@inject NavigationManager NavManager
@inject Blazored.Toast.Services.IToastService ToastService

<!-- ─────────── wrapper ─────────── -->
<div class="min-h-screen flex items-start justify-center py-12 px-4 bg-gray-50">
    <div class="w-full max-w-3xl space-y-10">
        <!-- ───── عنوان صفحه ───── -->
        <h1 class="text-3xl font-extrabold text-center text-indigo-700 mb-8">
            فعالیت‌ها
        </h1>
        <!-- ───── فرم افزودن ───── -->
        <div class="w-full flex flex-wrap justify-center items-end gap-4 mb-10">

            <!-- نام فعالیت -->

            <!-- زمان انجام شده -->
            <div class="relative w-40">
                @* <label class="absolute bottom-8 t-xs text-gray-500">زمان انجام شده</label> *@
                <input class="w-full mt-1 border rounded-lg px-3 py-2 text-center bg-white shadow-sm focus:ring-2 focus:ring-indigo-200"
                       maxlength="8"
                       placeholder="Name Activity "
                       @bind="newTitle" />
            </div>

            <div class="relative w-40">
                @* <label class="absolute bottom-8 t-xs text-gray-500">زمان انجام شده</label> *@
                <input class="w-full mt-1 border rounded-lg px-3 py-2 text-center bg-white shadow-sm focus:ring-2 focus:ring-indigo-200"
                       maxlength="8"
                       placeholder="00:00:00"
                       @bind="newTime" />
            </div>

            <!-- دکمه افزودن -->
            <button class="bg-indigo-600 hover:bg-indigo-700 text-white rounded-lg p-2 text-sm flex items-center gap-2 shadow-md"
                    @onclick="AddActivity">
                <i class="fas fa-plus"></i>
                افزودن
            </button>
        </div>




        <!-- جدول / لودینگ -->
        @if (loading)
        {
            <div class="text-center py-12 text-indigo-500">در حال بارگذاری...</div>
        }
        else
        {
            <div class="rounded-2xl shadow-lg overflow-hidden bg-white/80 backdrop-blur-md">
                <table class="w-full table-auto text-sm">
                    <thead class="bg-indigo-600 text-white">
                        <tr>
                            <th class="px-5 py-3 text-right font-normal">ردیف</th>
                            <th class="px-5 py-3 text-right font-normal">عنوان فعالیت</th>
                            <th class="px-5 py-3 text-right font-normal">زمان کل</th>
                            <th class="px-5 py-3 text-center font-normal">عملیات</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (var i = 0; i < activities.Count; i++)
                        {
                            var act = activities[i];
                            <tr class="odd:bg-white even:bg-gray-50 hover:bg-gray-100 cursor-pointer"
                                @onclick="@(() => OnRowClick(act))">
                                <td class="px-5 py-3 text-right font-mono">@((i + 1).ToString())</td>
                                <td class="px-5 py-3 text-right font-semibold">@act.Title</td>
                                <td class="px-5 py-3 text-right">
                                    <span class="inline-flex items-center gap-1 font-mono text-indigo-700">
                                        <i class="fas fa-clock text-blue-400"></i>
                                        @FormatTime(act.TotalSeconds)
                                    </span>
                                </td>
                                <td class="px-5 py-3">
                                    <div class="flex justify-center gap-2" @onclick:stopPropagation>
                                        <button class="p-2 bg-white border border-yellow-400 hover:bg-yellow-50 text-yellow-600 rounded-full shadow"
                                                title="ویرایش"
                                                @onclick="@(() => OpenEditModal(act))">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button class="p-2 bg-white border border-red-400 hover:bg-red-50 text-red-600 rounded-full shadow"
                                                title="حذف"
                                                @onclick="@(() => ConfirmDelete(act.Id))">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }

        <!-- مودال ویرایش -->
        @if (editModalOpen)
        {
            <div class="fixed inset-0 bg-black/40 flex items-center justify-center z-50">
                <div class="bg-white rounded-xl p-6 w-full max-w-md shadow-lg mx-4">
                    <h2 class="text-xl font-bold text-indigo-700 mb-4">ویرایش فعالیت</h2>

                    <div class="flex flex-col gap-5">
                        <input class="border rounded-md px-4 py-2 text-right shadow-sm focus:ring-2 focus:ring-indigo-200"
                               placeholder="عنوان جدید"
                               @bind="editTitle" />

                        <div class="flex items-center gap-3">
                            <span class="text-sm text-gray-600">زمان فعالیت:</span>
                            <input class="border rounded-md px-3 py-1 text-center w-28 shadow-sm focus:ring-2 focus:ring-indigo-200"
                                   maxlength="8"
                                   placeholder="00:00:00"
                                   @bind="editTime" />
                        </div>

                        <div class="flex justify-end gap-3">
                            <button class="px-4 py-2 rounded-md bg-gray-200 text-gray-700 hover:bg-gray-300"
                                    @onclick="CloseEditModal">
                                لغو
                            </button>
                            <button class="px-4 py-2 rounded-md bg-indigo-600 text-white hover:bg-indigo-700"
                                    @onclick="SaveEdit">
                                ذخیره
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }

        <!-- مودال تأیید حذف -->
        @if (confirmOpen)
        {
            <div class="fixed inset-0 bg-black/40 flex items-center justify-center z-50">
                <div class="bg-white rounded-xl p-6 w-full max-w-sm shadow-lg mx-4">
                    <p class="text-gray-800 mb-5">آیا مطمئن هستید که این فعالیت حذف شود؟</p>
                    <div class="flex justify-end gap-3">
                        <button class="px-4 py-2 rounded-md bg-gray-200 text-gray-700 hover:bg-gray-300"
                                @onclick="CancelDelete">
                            لغو
                        </button>
                        <button class="px-4 py-2 rounded-md bg-red-600 text-white hover:bg-red-700"
                                @onclick="DeleteActivity">
                            حذف
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    /*───────── state ─────────*/
    private List<ActivityDto> activities = new();
    private bool loading = true;

    private string newTitle = "";
    private string newTime = "00:00:00";

    private bool editModalOpen = false;
    private int editId;
    private string editTitle = "";
    private string editTime = "00:00:00";

    private bool confirmOpen = false;
    private int deleteId;

    /*───────── lifecycle ─────────*/
    protected override async Task OnInitializedAsync() => await LoadActivities();

    /*───────── helpers ─────────*/
    private static int TimeToSeconds(string? hms) => TimeSpan.TryParse(hms, out var ts) ? (int)ts.TotalSeconds : 0;
    private static string FormatTime(int s) => TimeSpan.FromSeconds(s).ToString(@"hh\:mm\:ss");

    /*───────── CRUD ─────────*/
    private async Task LoadActivities()
    {
        loading = true;
        try
        {
            var acts = await ApiService.GetActivitiesAsync();
            foreach (var a in acts)
            {
                if (a.TotalSeconds <= 0)
                {
                    var rec = await ApiService.GetTimeRecordsByActivityAsync(a.Id);
                    a.TotalSeconds = rec.Sum(r => TimeToSeconds(r.Duration));
                }
            }
            activities = acts;
        }
        catch { ToastService.ShowError("خطا در بارگذاری فعالیت‌ها"); }
        loading = false;
    }

    private async Task AddActivity()
    {
        if (string.IsNullOrWhiteSpace(newTitle))
        {
            ToastService.ShowError("عنوان فعالیت را وارد کنید!");
            return;
        }

        var ok = await ApiService.CreateActivityAsync(new ActivityDto
            {
                Title = newTitle.Trim(),
                TotalSeconds = TimeToSeconds(newTime)
            });

        if (ok)
        {
            ToastService.ShowSuccess("فعالیت جدید اضافه شد");
            newTitle = ""; newTime = "00:00:00";
            await LoadActivities();
        }
        else ToastService.ShowError("خطا در افزودن فعالیت");
    }

    private void OpenEditModal(ActivityDto a)
    {
        (editId, editTitle, editTime) = (a.Id, a.Title, FormatTime(a.TotalSeconds));
        editModalOpen = true;
    }

    private void CloseEditModal() => editModalOpen = false;

    private async Task SaveEdit()
    {
        if (string.IsNullOrWhiteSpace(editTitle))
        {
            ToastService.ShowError("عنوان فعالیت نمی‌تواند خالی باشد");
            return;
        }

        var ok = await ApiService.UpdateActivityAsync(editId, new ActivityDto
            {
                Id = editId,
                Title = editTitle.Trim(),
                TotalSeconds = TimeToSeconds(editTime)
            });

        if (ok)
        {
            ToastService.ShowSuccess("ویرایش انجام شد");
            await LoadActivities();
        }
        else ToastService.ShowError("خطا در ویرایش");

        editModalOpen = false;
    }

    private void ConfirmDelete(int id) { deleteId = id; confirmOpen = true; }
    private void CancelDelete() => confirmOpen = false;

    private async Task DeleteActivity()
    {
        var ok = await ApiService.DeleteActivityAsync(deleteId);
        if (ok)
        {
            ToastService.ShowSuccess("حذف شد");
            await LoadActivities();
        }
        else ToastService.ShowError("خطا در حذف");

        confirmOpen = false;
    }

    /*───────── navigation ─────────*/
    private void OnRowClick(ActivityDto a) => NavManager.NavigateTo($"/tracker/{a.Id}");
}
